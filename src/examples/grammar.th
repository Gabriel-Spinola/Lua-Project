1 + 1

# Imutable as default
# => (same as return)
# functions call does not need brackets
# := get the returning type
# maybe .

print "Hello, World!"

string immutableVar -> "text"
mut string mutableVar = "Texto"

def sum(int a, int b) -> int:
  int result = a + b

  => result

mut result := sum 2, 3

string immutableResult = sum result, 1 :: toString

if result >= 2:
  result++

  print "result is greater than 2"

int[] test = [1, 2, 3]

for index, value in test:
  print "at index: " + index + " value: " + value

for i in len 10:
  print i

module Test {
  interface Foo:
    func1 -> string
    sum (a: float, b: float) -> int

  def Foo::func1 -> string:
    => "bar"

  def Foo::sum(a, b):
    => (a + b) :: toInt

  def string::toString(value: interface) -> string:
    => "" + value ""

  => "Bença mãe"
}

require Test 

print foo::sum 1, 2 :: toString
print sum 1, 2 :: toString